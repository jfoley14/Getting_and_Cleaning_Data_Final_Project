getwd()
swirl()
library(swirl)
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div=2)
args(remainder)
submit()
evaluate(blah)
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[3]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("Hello")
submit()
submit()
mad_libs(place="CMU",adjective="angry",noun="pasta")
submit()
'I' %p% 'love' %p% 'R!'
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t``)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
?strptime
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
library("swirl")
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vector)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
uniqe_vals <- lapply(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
data(iris)
?iris
iris
tapply(iris$Sepal.Length, iris$Species, mean)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
?apply
library(datasets)
data(mtcars)
?mtcars
mtcars
with(mtcars, tapply(mpg, cyl, mean))
mean(mtcars$mpg, mtcars$cyl)
sapply(mtcars, cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
lapply(mtcars, mean)
apply(mtcars, 2, mean)
split(mtcars, mtcars$cyl)
tapply(mtcars$hp, mtcars$cyl, mean)
209.21429 - 82.63636
debug(ls)
ls
source('~/Desktop/Week_3/ProgrammingAssignment2/cachematrix.R')
cm <- makeCacheMatrix()
m1 <- matrix(c(1/2, -1/4, -1, 3/4), nrow = 2, ncol = 2)
cm$set(m1)
cm$set
cm
cacheSolve(cm)
cm
cm$get()
cm$getinverse()
cm2 <- makeCacheMatrix()
cacheSolve(cm2)
cm2$get()
cm2$getinverse()
source('~/Desktop/Week_3/ProgrammingAssignment2/cachematrix.R')
my_cach <- makeCacheMatrix(m1)
cacheSolve(my_cach)
cacheSolve(my_cach)
m2 <- matrix(c(5/8, -1/8, -7/8, 3/8), nrow = 2, ncol = 2)
my_cach$set(m2)
cacheSolve(my_cach)
cacheSolve(my_cach)
source('~/Desktop/R_Programming/Week_3/ProgrammingAssignment2/PA2_PeerGrading.R')
my_cach <- makeCacheMatrix(m1)
my_cach$get()
cacheSolve(my_cach)
cacheSolve(my_cach)
source('~/Desktop/R_Programming/Week_3/ProgrammingAssignment2/PA2_PeerGrading.R')
source('~/Desktop/R_Programming/Week_3/ProgrammingAssignment2/PA2_PeerGrading.R')
source('~/Desktop/R_Programming/Week_3/ProgrammingAssignment2/PA2_PeerGrading.R')
my_cach <- makeCacheMatrix(m1)
my_cach$get()
cacheSolve(my_cach)
library(swirl)
swirl
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
plants$Active_Growth_Period
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
sample(c(0,1), 100, replacement = TRUE, prob = c(0.3, 0.7))
flips = sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 = rbinom(100, size = 1, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
rnorm()
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
rpois(5, mean = 10)
?rpois
rpois(5, lambda = 10)
my_pois <- replicate(100, rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
swirl()
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
?plot
plot(cars, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
?plot
plot(cars, main = "My Plot", sub = "My Plot Subtitle")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
par?
exit
?par
plot(cars, xlim = c(10, 15))
?points
plot(cars)
plot(cars, pch = 2)
data(mtcars)
?boxplot()
?boxplot
?boxplot()
?boxplot
help("boxplot")
help(boxplot)
help(boxplot)
boxplot(mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
set.seed(1)
rpois(5, 2)
?dpois
rep(0:1, each = 5)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
plot(y)
?read.table
swirl()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
setwd("/Users/JohnFoley/Desktop/Course_Project")
Xtrain <- read.table("UCI_HAR_Dataset/train/X_train.txt")
Ytrain <- read.table("UCI_HAR_Dataset/train/Y_train.txt")
Ytrain$group <- "train" # Create group column to signify training data
subject_train <- read.table("UCI_HAR_Dataset/train/subject_train.txt")
train <- cbind(subject_train, Ytrain, Xtrain)
Xtest <- read.table("UCI_HAR_Dataset/test/X_test.txt")
Ytest <- read.table("UCI_HAR_Dataset/test/Y_test.txt")
Ytest$group <- "test" # Create group column to signify testing data
subject_test <- read.table("UCI_HAR_Dataset/test/subject_test.txt")
test <- cbind(subject_test, Ytest, Xtest)
features <- read.table("UCI_HAR_Dataset/features.txt")
features <- as.character(features[,2])
dat <- rbind(train, test)
colnames(dat)[1] <- "subject"
colnames(dat)[2] <- "activity"
colnames(dat)[4:564] <- features
dat[dat["activity"] == 1, ]$activity <- "walking"
dat[dat["activity"] == 2, ]$activity <- "walking upstairs"
dat[dat["activity"] == 3, ]$activity <- "walking downstairs"
dat[dat["activity"] == 4, ]$activity <- "sitting"
dat[dat["activity"] == 5, ]$activity <- "standing"
dat[dat["activity"] == 6, ]$activity <- "laying"
dat <- dat[order(dat[, "subject"]), ]
dat <- cbind(subject = dat$subject, activity = dat$activity, group = dat$group,
dat[, grep("mean|std", colnames(dat))])
colnames(dat) <- sapply(colnames(dat), gsub, pattern = "()", replacement = "",
fixed = TRUE)
colnames(dat) <- sapply(colnames(dat), gsub, pattern = "-", replacement = "_",
fixed = TRUE)
colnames(dat) <- sapply(colnames(dat), tolower)
library(dplyr)
grouped_dat <- aggregate(dat[, c(1, 4:82)], list(dat$subject, dat$activity),
mean)
grouped_dat <- select(grouped_dat, -subject)
colnames(grouped_dat)[1] <- "subject"
colnames(grouped_dat)[2] <- "activity"
grouped_dat <- arrange(grouped_dat, subject, activity)
colnames(grouped_dat)[3:81] <- sapply(colnames(grouped_dat)[3:81],
function(x) paste("avg_", x, sep = ""))
View(grouped_dat)
write.table(grouped_dat, file = "final_data.txt", row.names = FALSE)
data <- read.table("final_data.txt", header = TRUE)
View(data)
